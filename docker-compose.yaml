services:
  db-manager:
    build:
      context: .
      dockerfile: "./docker/db-manager/Dockerfile"
      target: db-dev
    container_name: portfolio-db-manager
    env_file: ./db-manager/.env
    volumes:
      - db-manager:/db
      - ./db-manager:/app
    tty: true

  db-client:
    build:
      context: .
      dockerfile: "./docker/db-client/Dockerfile"
    container_name: portfolio-db-client
    env_file: ./db-client/.env
    volumes:
      - db-manager:/db
    tty: true

  works-server:
    build:
      context: .
      dockerfile: "./docker/fsharp/Dockerfile"
      target: works-server-dev
    container_name: portfolio-works-server
    volumes:
      - db-manager:/db
      - ./fsharp:/apps
    command: dotnet watch run --project ./src/WorksServer/WorksServer.fsproj
    tty: true

  nginx:
    build:
      context: .
      dockerfile: "./docker/nginx/Dockerfile"
    container_name: portfolio-nginx
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/log:/var/log/nginx
    env_file: ./nginx/.env
    restart: always
    depends_on:
      - works-server
    ports:
      - "8800:80"

volumes:
  db-manager:
