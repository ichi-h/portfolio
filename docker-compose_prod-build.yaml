version: "3.7"

services:
  db-manager:
    image: ${AWS_ACCOUNT_ID}.dkr.ecr.ap-northeast-1.amazonaws.com/portfolio-db-manager:latest
    build:
      context: .
      dockerfile: "./docker/db-manager/Dockerfile"
      target: db-prod
    container_name: portfolio-db-manager
    env_file: ./db-manager/.prod.env
    volumes:
      - db-manager:/db
    tty: true

  db-client:
    image: ${AWS_ACCOUNT_ID}.dkr.ecr.ap-northeast-1.amazonaws.com/portfolio-db-client:latest
    build:
      context: .
      dockerfile: "./docker/db-client/Dockerfile"
    container_name: portfolio-db-client
    env_file: ./db-client/.prod.env
    volumes:
      - db-manager:/db
    tty: true

  works-server:
    image: ${AWS_ACCOUNT_ID}.dkr.ecr.ap-northeast-1.amazonaws.com/portfolio-works-server:latest
    build:
      context: .
      dockerfile: "./docker/fsharp/Dockerfile"
      target: works-server-prod
    container_name: portfolio-works-server
    volumes:
      - db-manager:/db
      - ./fsharp/src/WorksServer/.prod.env:/apps/.env
    tty: true

  nginx:
    image: ${AWS_ACCOUNT_ID}.dkr.ecr.ap-northeast-1.amazonaws.com/portfolio-nginx:latest
    build:
      context: .
      dockerfile: "./docker/nginx/Dockerfile"
    container_name: portfolio-nginx
    restart: always
    depends_on:
      - works-server
    ports:
      - "80:80"

volumes:
  db-manager:
